// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Adapter {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  // Relation to Template
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String

  // Every adapter know the previous adapter so he can easily get the result of the previous adapter in
  // in the runner's state
  prevAdapterId String?
  prevAdapter   Adapter? @relation("Graph", fields: [prevAdapterId], references: [id])

  // Relation to next adapters
  // used by a adapter when it has multiple next adapters
  // exemple: a adapter that his result is used by multiple adapters, generated email gived to adapter that will
  // use this email to create account on it
  // Google Adapter ->
  //    Both adapters will use the email generated by Google Adapter
  //    And it will be in parallel
  //    - Facebook Adapter
  //    - Twitter Adapter
  nextAdapters Adapter[] @relation("Graph")
}

model Template {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  // Relation to Adapters
  adapters Adapter[]
  runners  Runner[]
}

model Runner {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to Template
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String

  // The runner's state is a json that contains every information about
  // every adapter that is running, status of each adapter, etc.
  // check typescript for the type of this json
  state Json
}
